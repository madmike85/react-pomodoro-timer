{"version":3,"sources":["pages/Statistics/statistics.module.scss","components/Timer/timer.module.scss","components/ui-kit/Select/select.module.scss","components/TasksContainer/TasksList/Task/Menu/menu.module.scss","components/Header/header.module.scss","components/TasksContainer/TasksList/Modal/modal.module.scss","components/TasksContainer/TasksList/Task/task.module.scss","pages/Main/main.module.scss","components/Chart/Bar/bar.module.scss","components/ui-kit/Button/button.module.scss","components/TasksContainer/tasks-container.module.scss","components/TasksContainer/TasksList/tasks-list.module.scss","components/Timer/Actions/actions.module.scss","components/Timer/Clock/clock.module.scss","components/Legend/legend.module.scss","components/ui-kit/Input/input.module.scss","components/Chart/chart.module.scss","components/icons/LogoIcon.tsx","components/icons/EqualizerIcon.tsx","components/icons/MenuIcon.tsx","components/icons/PlusRoundIcon.tsx","components/icons/MinusRoundIcon.tsx","components/icons/PencilIcon.tsx","components/icons/TrashcanIcon.tsx","components/icons/PlusIcon.tsx","components/icons/CloseIcon.tsx","components/icons/ArrowDownIcon.tsx","components/icons/FocusBigIcon.tsx","components/icons/ClockBigIcon.tsx","components/icons/CancelBigIcon.tsx","components/Header/Header.tsx","components/Legend/Legend.tsx","components/ui-kit/Button/Button.tsx","components/ui-kit/Input/Input.tsx","store/tasks/action.ts","components/TasksContainer/TasksList/Modal/Modal.tsx","components/TasksContainer/TasksList/Task/Menu/Menu.tsx","components/TasksContainer/TasksList/Task/Task.tsx","enums/actions.enum.ts","components/TasksContainer/TasksList/TasksLIst.tsx","components/TasksContainer/TasksContainer.tsx","helpers/common-helpers.ts","components/Timer/Actions/Actions.tsx","store/statistics/action.ts","components/Timer/Clock/Clock.tsx","constants.ts","components/Timer/Timer.tsx","pages/Main/Main.tsx","components/Chart/Chart.tsx","components/Chart/Bar/Bar.tsx","components/ui-kit/Select/Select.tsx","helpers/convert-numerals-helpers.ts","pages/Statistics/Statistics.tsx","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","LogoIcon","width","height","viewBox","fill","xmlns","clipPath","d","id","EqualizerIcon","MenuIcon","cx","cy","r","PlusRoundIcon","MinusRoundIcon","PencilIcon","TrashcanIcon","PlusIcon","CloseIcon","ArrowDownIcon","stroke","strokeWidth","FocusBigIcon","strokeLinecap","strokeLinejoin","ClockBigIcon","CancelBigIcon","Header","className","styles","header","to","logo","logoIcon","logoText","statistics","statisticsIcon","statisticsText","Legend","title","list","Button","theme","children","disabled","onClick","classes","classNames","button","Input","placeholder","value","onChange","useState","currentValue","setCurrentValue","useEffect","input","event","currentTarget","UPDATE_TASKS","updateTasks","data","type","ADD_TASK","Modal","onConfirm","onCancel","onClose","container","modal","confirm","cancel","close","icon","NOOP","Menu","count","onAdd","onSubtract","onEdit","onDelete","isOpen","setIsOpen","ref","useRef","handelClick","target","Node","current","contains","document","addEventListener","removeEventListener","menu","menuIcon","contentContainer","content","map","item","onItemClick","Task","completed","onDeleteTask","onUpdateTask","taskCount","setTaskCount","taskTitle","setTaskTitle","isEditing","setIsEditing","taskTitleClasses","handleClick","focus","task","onKeyDown","key","newCount","ActionsEnum","TasksList","tasks","useSelector","state","totalTime","setTotalTime","isModalShown","setIsModalShow","currentTaskId","setCurrentTaskId","total","reduce","acc","curr","calculateTotalTime","dispatch","useDispatch","closeModal","length","AnimatePresence","motion","li","initial","opacity","scale","animate","exit","transition","cubicBezier","newList","updateTask","time","filter","TasksContainer","nanoid","addTask","daysOfWeekMap","Map","set","setActonName","action","start","stop","pause","continue","complete","skip","createDateObject","obj","Date","date","getDate","day","getDay","month","getMonth","year","getFullYear","getDateStringFromDateOject","getDayName","get","getFocus","dayStatistics","workTime","Math","round","pauseTime","Actions","isBreak","setDefault","onStart","onStop","onPause","onContinue","onSkip","onComplete","rightButtonAction","setRightButtonAction","leftButtonAction","setLeftButtonAction","left","onLeftButtonClick","right","onRightButtonClick","UPDATE_STOP_CLICKS","UPDATE_COMPLETED_TASKS","UPDATE_PAUSED_TIME","UPDATE_WORK_TIME","updateWorkTime","Clock","isPaused","isStarted","onTimeOver","onDurationChange","duration","setDuration","pauseDuration","setPauseDuration","paused","setPaused","started","setStarted","amount","intervalTimeoutId","pausedIntervalTimeoutId","setInterval","clearInterval","integerDuration","ceil","minutes","floor","seconds","clock","add","sessionTime","Timer","tasksToBeDone","isStart","setIsStart","setIsPaused","setIsBreak","defaultState","setDefaultState","find","currentTask","setCurrentTask","setTime","numberOfBreaks","setNumberOfBreaks","headerClasses","break","updateTasksList","tomatoCouter","taskLine","taskNumber","taskName","actions","Main","legend","Chart","chart","Bar","isActive","barStyle","barClasses","bar","empty","active","style","Select","selectedItem","options","onSelect","selectClasses","select","selectActive","iconClasses","iconActive","placeholderText","selectedItemText","dropdown","index","dropdownItem","minutesUnits","single","multi","plural","hoursUnits","convertNumerals","units","unit","lastNumber","getTimeObjectFromMinutes","totalMinutes","hours","convertMinutesToHHMMFormat","getFullTimeFromMinutes","daysList","timeData","defaultDayStatistics","stopClicks","completedTasks","Statistics","selectedItemOption","setSelectedOption","currentDayId","setCurrentDayId","selectedDay","setSelectedDay","weekStatistics","setWeekStatistics","activityData","setActivityData","setDayStatistics","week","currOffset","targetDate","i","first","currDay","setDate","push","getWeek","weekData","some","t","barData","el","val","dayData","onLegendItemClick","focusClasses","dataContainer","pauseClasses","stopsClasses","stops","onOptionSelect","dayActivity","dayTitle","dayText","pomodoroContainer","emptyPomodoro","src","process","alt","pomodoroCounter","pomodoroTitle","barChart","legendItem","activeItem","background","line","dash","lineTime","dataRow","dataColumn","dataTitle","dataValue","dataIcon","initialState","updateStopClicks","newItem","updateCompletedTasks","updatePausedTime","store","createStore","seriallisedState","localStorage","getItem","JSON","parse","error","console","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","App","exact","path","component","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e664937f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"statistics_container__1QPrM\",\"header\":\"statistics_header__2ywyo\",\"title\":\"statistics_title__39zwu\",\"select\":\"statistics_select__6N8CI\",\"content\":\"statistics_content__5tHv3\",\"dataRow\":\"statistics_dataRow__3EAAm\",\"dayActivity\":\"statistics_dayActivity__l1cdj\",\"pomodoroContainer\":\"statistics_pomodoroContainer___TZ7B\",\"chart\":\"statistics_chart__3wXP3\",\"dataContainer\":\"statistics_dataContainer__3-Prk\",\"dayTitle\":\"statistics_dayTitle__2RpN4\",\"dayText\":\"statistics_dayText__1Afrc\",\"pomodoroCounter\":\"statistics_pomodoroCounter__1-3xx\",\"pomodoroTitle\":\"statistics_pomodoroTitle__3dMLS\",\"barChart\":\"statistics_barChart__223kU\",\"bar\":\"statistics_bar__3OQ7n\",\"legend\":\"statistics_legend__3wE2Y\",\"legendItem\":\"statistics_legendItem__2N5EE\",\"activeItem\":\"statistics_activeItem__31es5\",\"focus\":\"statistics_focus__3O7VB\",\"dataIcon\":\"statistics_dataIcon__39JGB\",\"pause\":\"statistics_pause__2nuRA\",\"stops\":\"statistics_stops__fYkxv\",\"dataTitle\":\"statistics_dataTitle__2wToQ\",\"dataValue\":\"statistics_dataValue__2JyXM\",\"emptyPomodoro\":\"statistics_emptyPomodoro__134X7\",\"background\":\"statistics_background__2Nvg8\",\"line\":\"statistics_line__34lKP\",\"dash\":\"statistics_dash__3YxxG\",\"lineTime\":\"statistics_lineTime__1ui8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timer_container__l_cZm\",\"header\":\"timer_header__12nYz\",\"start\":\"timer_start__3c8Cm\",\"break\":\"timer_break__d4iEY\",\"task\":\"timer_task__1UYoP\",\"tomatoCouter\":\"timer_tomatoCouter__2V3qq\",\"content\":\"timer_content__3jJHB\",\"taskLine\":\"timer_taskLine__1s7CT\",\"taskNumber\":\"timer_taskNumber__2ehXx\",\"actions\":\"timer_actions__3Xi3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__wWSkC\",\"selectActive\":\"select_selectActive__Pz8mS\",\"input\":\"select_input__3FCKU\",\"icon\":\"select_icon__FAGcu\",\"iconActive\":\"select_iconActive__R051B\",\"selectedItemText\":\"select_selectedItemText__2fBll\",\"dropdown\":\"select_dropdown__2XVnb\",\"dropdownItem\":\"select_dropdownItem__3M_JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__1bpS4\",\"menuIcon\":\"menu_menuIcon__2LilF\",\"contentContainer\":\"menu_contentContainer__1U2Xc\",\"content\":\"menu_content__OOsE5\",\"item\":\"menu_item__3tsHb\",\"icon\":\"menu_icon__3tLKl\",\"title\":\"menu_title__2OEVj\",\"disabled\":\"menu_disabled__2RFG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1stIm\",\"logo\":\"header_logo__1fzAN\",\"statistics\":\"header_statistics__2Ys-f\",\"logoIcon\":\"header_logoIcon__379ce\",\"logoText\":\"header_logoText__1S3xv\",\"statisticsIcon\":\"header_statisticsIcon__MR4bv\",\"statisticsText\":\"header_statisticsText__3vnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__1dvXG\",\"modal\":\"modal_modal__3rTsB\",\"title\":\"modal_title__37pub\",\"cancel\":\"modal_cancel__1rmIA\",\"close\":\"modal_close__1PKie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"task_task__S4yzM\",\"count\":\"task_count__3E_eq\",\"title\":\"task_title__3Cpw6\",\"input\":\"task_input__3IgkW\",\"menu\":\"task_menu__bzuAV\",\"completed\":\"task_completed__cTJfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__3KMac\",\"left\":\"main_left__3-fUB\",\"right\":\"main_right__3jicQ\",\"legend\":\"main_legend__3GQHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"bar_bar__1Nw_t\",\"empty\":\"bar_empty__XlOBm\",\"active\":\"bar_active__29FT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3dYZJ\",\"green\":\"button_green__2qBqB\",\"red\":\"button_red__2IwE7\",\"disabled\":\"button_disabled__1HzTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tasks-container_container__1EhbB\",\"input\":\"tasks-container_input__3cdbO\",\"button\":\"tasks-container_button__fa31P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"tasks-list_list__1mZUT\",\"item\":\"tasks-list_item__2eH0d\",\"time\":\"tasks-list_time__fglRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"actions_container__3Ga89\",\"left\":\"actions_left__1zH5r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"clock_container__1hCA9\",\"clock\":\"clock_clock__20Y6T\",\"add\":\"clock_add__1lLAA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"legend_title__bdvME\",\"list\":\"legend_list__27gh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2M8bP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"chart_chart__Y607i\"};","import React from 'react';\r\n\r\nexport function LogoIcon() {\r\n    return (\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <g clipPath=\"url(#clip0)\">\r\n                <path d=\"M38.9151 23.2834C38.9151 33.7058 30.466 40 20.0437 40C9.62098 40 1.17188 31.5509 1.17188 21.1282C1.17188 10.7059 9.88496 4.2981 20.3073 4.2981C30.73 4.2981 38.9151 12.8607 38.9151 23.2834Z\" fill=\"#DC3E22\" />\r\n                <path d=\"M28.238 12.6066C27.3211 11.673 25.8377 10.8048 24.733 10.551C25.3401 10.0127 25.4623 9.99494 26.2227 9.61816C28.1713 8.65365 31.0576 8.56485 31.0576 8.56485C31.0576 8.56485 27.6509 6.8042 25.1601 6.91468C24.5259 6.94257 23.8571 7.16658 23.2118 7.48403C23.5757 6.97054 23.9205 6.45998 24.1409 6.07643C24.8152 4.90368 25.524 3.42627 25.524 3.42627C25.524 3.42627 22.9122 3.56573 21.7008 5.01565C21.2407 5.56645 20.8934 6.26625 20.6392 6.92275C20.1878 6.40419 19.6896 5.94242 19.1913 5.58195C16.6999 3.77896 12.7192 4.16903 12.7192 4.16903C12.7192 4.16903 15.7263 5.87486 17.0793 7.57656C17.6076 8.2411 18.1437 8.54842 18.4642 9.29352C17.3564 9.05367 14.8569 9.13565 13.63 9.59057C10.4771 10.7599 9.11852 15.4649 9.11852 15.4649C9.11852 15.4649 12.1952 13.3443 16.3813 11.8565C17.3017 11.5295 18.2748 11.4429 19.1229 11.4578C18.7379 12.0575 18.3173 12.8363 17.999 13.7546C17.2247 15.9904 18.2479 21.3113 18.2479 21.3113C18.2479 21.3113 20.4896 18.1647 21.403 15.6157C21.8718 14.3073 21.9879 12.9936 21.9904 12.0242C22.8217 12.3931 23.8009 12.9319 24.5326 13.398C28.2794 15.7852 30.072 20.1435 30.072 20.1435C30.072 20.1435 30.5941 15.006 28.238 12.6066Z\" fill=\"#899441\" />\r\n                <path d=\"M20.5008 10.3094C20.4889 10.3094 20.477 10.3091 20.4651 10.3088C19.7242 10.2896 19.1391 9.67376 19.1572 8.9334C19.1587 8.86931 19.2234 4.36125 16.7191 2.40111C16.135 1.94395 16.0318 1.09984 16.489 0.515424C16.9465 -0.0686834 17.7906 -0.171833 18.3747 0.285626C21.9559 3.08806 21.8491 8.76128 21.843 9.00145C21.8238 9.73083 21.2262 10.3094 20.5008 10.3094Z\" fill=\"#A8B64F\" />\r\n            </g>\r\n            <defs>\r\n                <clipPath id=\"clip0\">\r\n                    <rect width=\"40\" height=\"40\" fill=\"white\" />\r\n                </clipPath>\r\n            </defs>\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function EqualizerIcon() {\r\n    return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M10 20H14V4H10V20ZM4 20H8V12H4V20ZM16 9V20H20V9H16Z\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function MenuIcon() {\r\n    return (\r\n        <svg width=\"26\" height=\"6\" viewBox=\"0 0 26 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#C4C4C4\" />\r\n            <circle cx=\"13\" cy=\"3\" r=\"3\" fill=\"#C4C4C4\" />\r\n            <circle cx=\"23\" cy=\"3\" r=\"3\" fill=\"#C4C4C4\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PlusRoundIcon() {\r\n    return (\r\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M9.75 5.25H8.25V8.25H5.25V9.75H8.25V12.75H9.75V9.75H12.75V8.25H9.75V5.25ZM9 1.5C4.8675 1.5 1.5 4.8675 1.5 9C1.5 13.1325 4.8675 16.5 9 16.5C13.1325 16.5 16.5 13.1325 16.5 9C16.5 4.8675 13.1325 1.5 9 1.5ZM9 15C5.6925 15 3 12.3075 3 9C3 5.6925 5.6925 3 9 3C12.3075 3 15 5.6925 15 9C15 12.3075 12.3075 15 9 15Z\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function MinusRoundIcon() {\r\n    return (\r\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M9 1.5C4.8675 1.5 1.5 4.8675 1.5 9C1.5 13.1325 4.8675 16.5 9 16.5C13.1325 16.5 16.5 13.1325 16.5 9C16.5 4.8675 13.1325 1.5 9 1.5ZM9 15C5.6925 15 3 12.3075 3 9C3 5.6925 5.6925 3 9 3C12.3075 3 15 5.6925 15 9C15 12.3075 12.3075 15 9 15Z\" />\r\n            <path d=\"M5.25 8.25H8.25H9.75H12.75V9.75H9.75H8.25H5.25V8.25Z\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PencilIcon() {\r\n    return (\r\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M10.545 6.765L11.235 7.455L4.44 14.25H3.75V13.56L10.545 6.765ZM13.245 2.25C13.0575 2.25 12.8625 2.325 12.72 2.4675L11.3475 3.84L14.16 6.6525L15.5325 5.28C15.825 4.9875 15.825 4.515 15.5325 4.2225L13.7775 2.4675C13.6275 2.3175 13.44 2.25 13.245 2.25ZM10.545 4.6425L2.25 12.9375V15.75H5.0625L13.3575 7.455L10.545 4.6425Z\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function TrashcanIcon() {\r\n    return (\r\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M12 6.75V14.25H6V6.75H12ZM10.875 2.25H7.125L6.375 3H3.75V4.5H14.25V3H11.625L10.875 2.25ZM13.5 5.25H4.5V14.25C4.5 15.075 5.175 15.75 6 15.75H12C12.825 15.75 13.5 15.075 13.5 14.25V5.25Z\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function PlusIcon() {\r\n    return (\r\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M9.27559 9.13215V16H6.72441V9.13215H0V6.70291H6.72441V0H9.27559V6.70291H16V9.13215H9.27559Z\" fill=\"white\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function CloseIcon() {\r\n    return (\r\n        <svg width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M7.9115 8.80583L2.84406 13.9567L0.961665 12.0433L6.02911 6.89245L1.0675 1.84914L2.85992 0.0272091L7.82153 5.07052L12.7673 0.0433371L14.6497 1.95672L9.70392 6.9839L14.6655 12.0272L12.8731 13.8491L7.9115 8.80583Z\" fill=\"#C4C4C4\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function ArrowDownIcon() {\r\n    return (\r\n        <svg width=\"16\" height=\"10\" viewBox=\"0 0 16 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M15 1L8 8L1 1\" stroke=\"#B7280F\" strokeWidth=\"2\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function FocusBigIcon() {\r\n    return (\r\n        <svg width=\"129\" height=\"129\" viewBox=\"0 0 129 129\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M64.3158 118.632C94.3136 118.632 118.632 94.3136 118.632 64.3158C118.632 34.318 94.3136 10 64.3158 10C34.318 10 10 34.318 10 64.3158C10 94.3136 34.318 118.632 64.3158 118.632Z\" stroke=\"#C4C4C4\" strokeWidth=\"5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            <path d=\"M64.5 102C85.2107 102 102 85.2107 102 64.5C102 43.7893 85.2107 27 64.5 27C43.7893 27 27 43.7893 27 64.5C27 85.2107 43.7893 102 64.5 102Z\" stroke=\"#C4C4C4\" strokeWidth=\"5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            <path d=\"M64.5 85C75.8218 85 85 75.8218 85 64.5C85 53.1782 75.8218 44 64.5 44C53.1782 44 44 53.1782 44 64.5C44 75.8218 53.1782 85 64.5 85Z\" stroke=\"#C4C4C4\" strokeWidth=\"5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function ClockBigIcon() {\r\n    return (\r\n        <svg width=\"129\" height=\"129\" viewBox=\"0 0 129 129\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M64.3158 118.632C94.3136 118.632 118.632 94.3136 118.632 64.3158C118.632 34.318 94.3136 10 64.3158 10C34.318 10 10 34.318 10 64.3158C10 94.3136 34.318 118.632 64.3158 118.632Z\" stroke=\"#C4C4C4\" strokeWidth=\"5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            <path d=\"M64.3154 37.1579V64.3158L77.8944 77.8947\" stroke=\"#C4C4C4\" strokeWidth=\"5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function CancelBigIcon() {\r\n    return (\r\n        <svg width=\"129\" height=\"129\" viewBox=\"0 0 129 129\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M64.3158 118.632C94.3136 118.632 118.632 94.3136 118.632 64.3158C118.632 34.318 94.3136 10 64.3158 10C34.318 10 10 34.318 10 64.3158C10 94.3136 34.318 118.632 64.3158 118.632Z\" stroke=\"#C4C4C4\" strokeWidth=\"5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            <path d=\"M28 27L102 101\" stroke=\"#C4C4C4\" strokeWidth=\"5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\nimport { LogoIcon, EqualizerIcon } from '../icons';\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './header.module.scss';\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className={styles.header}>\r\n            <NavLink to='/' className={styles.logo}>\r\n                <div className={styles.logoIcon}>\r\n                    <LogoIcon />\r\n                </div>\r\n                <span className={styles.logoText}>\r\n                    pomodoro_box\r\n                </span>\r\n            </NavLink>\r\n            <NavLink to='/statistics' className={styles.statistics}>\r\n                <div className={styles.statisticsIcon}>\r\n                    <EqualizerIcon />\r\n                </div>\r\n                <span className={styles.statisticsText}>\r\n                    Статистика\r\n                </span>\r\n            </NavLink>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './legend.module.scss';\r\n\r\nexport function Legend() {\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>\r\n                Ура! Теперь можно начать работать:\r\n            </h2>\r\n            <ul className={styles.list}>\r\n                <li>\r\n                    Выберите категорию и напишите название текущей задачи\r\n                </li>\r\n                <li>\r\n                    Запустите таймер («помидор»)\r\n                </li>\r\n                <li>\r\n                    Работайте пока «помидор» не прозвонит\r\n                </li>\r\n                <li>\r\n                    Сделайте короткий перерыв (3-5 минут)\r\n                </li>\r\n                <li>\r\n                    Продолжайте работать «помидор» за «помидором», пока задача<br />\r\n                    не будут выполнена. Каждые 4 «помидора» делайте длинный<br />\r\n                    перерыв (15-30 минут).\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styles from './button.module.scss';\r\n\r\ninterface IButtonProps {\r\n    theme?: 'green' | 'red';\r\n    children?: React.ReactNode;\r\n    disabled?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport function Button({ theme = 'green', children, disabled = false, onClick = () => { } }: IButtonProps) {\r\n    const classes = classNames(\r\n        styles.button,\r\n        styles[theme],\r\n        { [styles.disabled]: disabled },\r\n    )\r\n\r\n    return (\r\n        <button className={classes} onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, { ChangeEvent, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport styles from './input.module.scss';\r\n\r\ninterface IInputProps {\r\n    value?: string;\r\n    placeholder?: string;\r\n    onChange?: (value: string) => void;\r\n}\r\n\r\nexport function Input({ placeholder = '', value = '', onChange }: IInputProps) {\r\n    const [currentValue, setCurrentValue] = useState(value);\r\n    useEffect(() => {\r\n        setCurrentValue(value);\r\n    }, [value])\r\n\r\n    const onValueChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setCurrentValue(event.currentTarget.value);\r\n        if (onChange) {\r\n            onChange(event.currentTarget.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input\r\n            className={styles.input}\r\n            placeholder={placeholder}\r\n            value={currentValue}\r\n            onChange={onValueChange}\r\n        />\r\n    )\r\n}","import { TaskInterface } from '../../interfaces/task.interface';\r\nimport { ActionCreator } from 'redux'\r\n\r\nexport const UPDATE_TASKS = 'UPDATE_TASKS';\r\nexport type UpdateTasksAction = {\r\n    type: typeof UPDATE_TASKS;\r\n    data: TaskInterface[];\r\n}\r\nexport const updateTasks: ActionCreator<UpdateTasksAction> = (data: TaskInterface[]) => ({\r\n    type: UPDATE_TASKS,\r\n    data,\r\n})\r\n\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport type AddTaskAction = {\r\n    type: typeof ADD_TASK;\r\n    task: TaskInterface;\r\n}\r\nexport const addTask: ActionCreator<AddTaskAction> = (task: TaskInterface) => ({\r\n    type: ADD_TASK,\r\n    task,\r\n})","import { CloseIcon } from '../../../icons';\r\nimport { Button } from '../../../ui-kit/Button';\r\nimport styles from './modal.module.scss';\r\n\r\ninterface IModalProps {\r\n    onConfirm?: () => void;\r\n    onCancel?: () => void;\r\n    onClose?: () => void;\r\n}\r\n\r\nexport function Modal({ onConfirm, onCancel, onClose }: IModalProps) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.modal}>\r\n                <p className={styles.title}>Удалить задачу?</p>\r\n                <div className={styles.confirm}>\r\n                    <Button theme=\"red\" onClick={onConfirm}>\r\n                        Удалить\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.cancel} onClick={onCancel}>\r\n                    Отмена\r\n                </div>\r\n                <div className={styles.close} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { MenuIcon, MinusRoundIcon, PencilIcon, PlusRoundIcon, TrashcanIcon } from '../../../../icons';\r\nimport styles from './menu.module.scss';\r\n\r\ntype MenuItemType = 'add' | 'subtract' | 'edit' | 'delete';\r\n\r\ninterface IMenuProps {\r\n    count: number;\r\n    onAdd?: () => void;\r\n    onSubtract?: () => void;\r\n    onEdit?: () => void;\r\n    onDelete?: () => void;\r\n}\r\n\r\ninterface IMenuItem {\r\n    icon: React.ReactNode;\r\n    title: string;\r\n    type: MenuItemType;\r\n}\r\n\r\nconst list: IMenuItem[] = [\r\n    {\r\n        icon: <PlusRoundIcon />,\r\n        title: 'Увеличить',\r\n        type: 'add'\r\n    },\r\n    {\r\n        icon: <MinusRoundIcon />,\r\n        title: 'Уменьшить',\r\n        type: 'subtract',\r\n    },\r\n    {\r\n        icon: <PencilIcon />,\r\n        title: 'Редактировать',\r\n        type: 'edit',\r\n    },\r\n    {\r\n        icon: <TrashcanIcon />,\r\n        title: 'Удалить',\r\n        type: 'delete',\r\n    }\r\n]\r\n\r\nconst NOOP = () => { };\r\n\r\nexport function Menu({ count, onAdd = NOOP, onSubtract = NOOP, onEdit = NOOP, onDelete = NOOP }: IMenuProps) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        const handelClick = (event: MouseEvent) => {\r\n            if (event.target instanceof Node && ref && !ref.current?.contains(event.target)) {\r\n                setIsOpen(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', handelClick);\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handelClick);\r\n        }\r\n    }, [ref]);\r\n\r\n    const onItemClick = (type: MenuItemType) => {\r\n        switch (type) {\r\n            case 'add':\r\n                onAdd();\r\n                break;\r\n            case 'subtract':\r\n                if (count > 1) {\r\n                    onSubtract();\r\n                }\r\n                break;\r\n            case 'edit':\r\n                onEdit();\r\n                break;\r\n            case 'delete':\r\n                onDelete();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setIsOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.menu} ref={ref}>\r\n            <div className={styles.menuIcon} onClick={() => setIsOpen(!isOpen)}>\r\n                <MenuIcon />\r\n            </div>\r\n            {isOpen && (\r\n                <div className={styles.contentContainer}>\r\n                    <ul className={styles.content}>\r\n                        {list.map((item: IMenuItem) => {\r\n                            return (\r\n                                <li\r\n                                    key={item.type}\r\n                                    className={`${styles.item} ${count <= 1 && item.type === 'subtract' ? styles.disabled : ''}`}\r\n                                    onClick={() => onItemClick(item.type)}\r\n                                >\r\n                                    <div className={styles.icon}>\r\n                                        {item.icon}\r\n                                    </div>\r\n                                    <span className={styles.title}>\r\n                                        {item.title}\r\n                                    </span>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import classNames from 'classnames';\r\nimport React, { ChangeEvent, KeyboardEvent, useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Menu } from './Menu';\r\nimport styles from './task.module.scss';\r\n\r\ninterface ITaskProps {\r\n    title: string;\r\n    count: number;\r\n    completed: boolean;\r\n    onDeleteTask: () => void;\r\n    onUpdateTask: (count: number, title: string) => void;\r\n}\r\n\r\nexport function Task({ title, count, completed, onDeleteTask, onUpdateTask }: ITaskProps) {\r\n    const [taskCount, setTaskCount] = useState(count);\r\n    const [taskTitle, setTaskTitle] = useState(title);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const ref = useRef<HTMLInputElement>(null);\r\n\r\n    const taskTitleClasses = classNames(\r\n        styles.title,\r\n        { [styles.completed]: completed },\r\n    );\r\n\r\n    const onAdd = () => {\r\n        const newCount = taskCount + 1\r\n        onUpdateTask(newCount, taskTitle);\r\n        setTaskCount(newCount)\r\n    }\r\n\r\n    const onSubtract = () => {\r\n        const newCount = taskCount - 1\r\n        setTaskCount(newCount)\r\n        onUpdateTask(newCount, taskTitle);\r\n    }\r\n\r\n    const onEdit = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const onDelete = () => {\r\n        onDeleteTask();\r\n    }\r\n\r\n    const onValueChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTaskTitle(event.currentTarget.value);\r\n    }\r\n\r\n    const onKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            onUpdateTask(taskCount, taskTitle);\r\n            setIsEditing(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClick = (event: MouseEvent) => {\r\n            if (event.target instanceof Node && !ref.current?.contains(event.target)) {\r\n                if (isEditing) {\r\n                    onUpdateTask(taskCount, taskTitle);\r\n                    setIsEditing(false);\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener('click', handleClick);\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handleClick);\r\n        }\r\n    }, [onUpdateTask, isEditing, taskCount, taskTitle]);\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            ref.current?.focus();\r\n        }\r\n    }, [isEditing])\r\n\r\n\r\n    return (\r\n        <div className={styles.task}>\r\n            <div className={styles.count}>{taskCount}</div>\r\n            {!isEditing && (\r\n                <span className={taskTitleClasses}>{taskTitle}</span>\r\n            )}\r\n            {isEditing && (\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    ref={ref}\r\n                    value={taskTitle}\r\n                    onChange={onValueChange}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            )}\r\n            <div className={styles.menu}>\r\n                <Menu\r\n                    count={taskCount}\r\n                    onAdd={onAdd}\r\n                    onSubtract={onSubtract}\r\n                    onEdit={onEdit}\r\n                    onDelete={onDelete}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","export enum ActionsEnum {\r\n    start,\r\n    stop,\r\n    pause,\r\n    continue,\r\n    skip,\r\n    complete\r\n}","import { AnimatePresence, motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TaskInterface } from '../../../interfaces/task.interface';\r\nimport { RootState } from '../../../store/store';\r\nimport { updateTasks } from '../../../store/tasks/action';\r\nimport { Modal } from './Modal';\r\nimport { Task } from './Task/Task';\r\nimport styles from './tasks-list.module.scss';\r\n\r\n\r\nexport function TasksList() {\r\n    const tasks = useSelector<RootState, TaskInterface[]>(state => state.tasks);\r\n    const [totalTime, setTotalTime] = useState(0);\r\n    const [isModalShown, setIsModalShow] = useState(false);\r\n    const [currentTaskId, setCurrentTaskId] = useState('');\r\n    useEffect(() => {\r\n        const calculateTotalTime = () => {\r\n            const total = tasks.reduce((acc: number, curr: TaskInterface) => {\r\n                return acc + (25 * curr.count);\r\n            }, 0);\r\n            setTotalTime(total);\r\n        }\r\n        calculateTotalTime();\r\n    }, [tasks])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const showModal = (id: string) => {\r\n        setCurrentTaskId(id);\r\n        setIsModalShow(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsModalShow(false);\r\n    }\r\n\r\n    const deleteTask = () => {\r\n        setIsModalShow(false);\r\n        const newList = tasks.filter((task: TaskInterface) => task.id !== currentTaskId);\r\n        dispatch(updateTasks(newList));\r\n    }\r\n\r\n    const updateTask = (id: string, count: number, title: string) => {\r\n        const newList = tasks.map((task: TaskInterface) => {\r\n            if (task.id === id) {\r\n                const newTask = {\r\n                    id: task.id,\r\n                    count,\r\n                    title,\r\n                }\r\n                return newTask;\r\n            }\r\n            return task;\r\n        });\r\n\r\n        dispatch(updateTasks(newList));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {tasks.length > 0 && (\r\n                <div>\r\n                    <ul className={styles.list}>\r\n                        <AnimatePresence>\r\n                            {tasks.map((task: TaskInterface) => (\r\n                                <motion.li\r\n                                    key={task.id}\r\n                                    initial={{ opacity: 0, scale: 0.5 }}\r\n                                    animate={{ opacity: 1, scale: 1 }}\r\n                                    exit={{ opacity: 0, scale: 0.5 }}\r\n                                    transition={{ cubicBezier: [.36, -0.64, .34, 1.76] }}\r\n                                    className={styles.item}\r\n                                >\r\n                                    <Task\r\n                                        title={task.title}\r\n                                        count={task.count}\r\n                                        completed={task.completed}\r\n                                        onDeleteTask={() => showModal(task.id)}\r\n                                        onUpdateTask={(count, title) => updateTask(task.id, count, title)}\r\n                                    />\r\n                                </motion.li>\r\n                            ))}\r\n                        </AnimatePresence>\r\n                    </ul>\r\n                    <p className={styles.time}>\r\n                        {totalTime} мин\r\n                    </p>\r\n                </div>\r\n            )}\r\n            {isModalShown &&\r\n                <Modal\r\n                    onConfirm={deleteTask}\r\n                    onCancel={closeModal}\r\n                    onClose={closeModal}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { nanoid } from 'nanoid'\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TaskInterface } from '../../interfaces/task.interface';\r\nimport { Button } from '../ui-kit/Button';\r\nimport { Input } from '../ui-kit/Input';\r\nimport styles from './tasks-container.module.scss';\r\nimport { TasksList } from './TasksList';\r\nimport { addTask } from '../../store/tasks/action';\r\n\r\nexport function TasksContainer() {\r\n    const dispatch = useDispatch();\r\n    const [taskTitle, setTaskTitle] = useState<string>('');\r\n\r\n    const onTaskTitleChange = (value: string) => {\r\n        setTaskTitle(value);\r\n    }\r\n\r\n    const onTaskCreated = () => {\r\n        if (taskTitle) {\r\n            const task: TaskInterface = {\r\n                id: nanoid(),\r\n                title: taskTitle,\r\n                count: 1,\r\n                completed: false,\r\n            }\r\n\r\n            dispatch(addTask(task));\r\n\r\n            setTaskTitle('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.input}>\r\n                <Input placeholder='Название задачи' onChange={onTaskTitleChange} value={taskTitle} />\r\n            </div>\r\n            <div className={styles.button}>\r\n                <Button theme='green' onClick={onTaskCreated}>\r\n                    Добавить\r\n                </Button>\r\n            </div>\r\n            <TasksList />\r\n        </div>\r\n    )\r\n}","import { ActionsEnum } from '../enums/actions.enum'\r\nimport { DateInterface } from '../interfaces/date.interface';\r\nimport { StatistticItemInterface } from '../interfaces/statistic-item.interface';\r\n\r\nconst daysOfWeekMap: Map<number, string> = new Map()\r\n    .set(1, 'Понедельник')\r\n    .set(2, 'Вторник')\r\n    .set(3, 'Среда')\r\n    .set(4, 'Четверг')\r\n    .set(5, 'Пятница')\r\n    .set(6, 'Суббота')\r\n    .set(7, 'Воскресенье');\r\n\r\nexport const setActonName = (action: ActionsEnum): string => {\r\n    switch(action) {\r\n        case ActionsEnum.start:\r\n            return 'Старт';\r\n        case ActionsEnum.stop:\r\n            return 'Стоп';\r\n        case ActionsEnum.pause:\r\n            return 'Пауза';\r\n        case ActionsEnum.continue:\r\n            return 'Продолжить';\r\n        case ActionsEnum.complete:\r\n            return 'Сделано';\r\n        case ActionsEnum.skip:\r\n            return 'Пропустить';\r\n        default:\r\n            return '';\r\n\r\n    }\r\n}\r\n\r\nexport const createDateObject = (): DateInterface => {\r\n    const obj = new Date();\r\n\r\n    const dateObj: DateInterface = {\r\n        date: obj.getDate(),\r\n        day: obj.getDay() === 0 ? 7 : obj.getDay(),\r\n        month: obj.getMonth(),\r\n        year: obj.getFullYear(),\r\n    }\r\n\r\n    return dateObj;\r\n}\r\n\r\nexport const getDateStringFromDateOject = (obj: DateInterface): string => {\r\n    return `${obj.date}_${obj.month}_${obj.year}`;\r\n}\r\n\r\nexport const getDayName = (value: number): string => {\r\n    if (!value) return '';\r\n\r\n    return daysOfWeekMap.get(value) as string;\r\n}\r\n\r\nexport const getWeek = (offset: number = 0): DateInterface[] => {\r\n    const currOffset = offset * 7;\r\n    const date = new Date();\r\n    const targetDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - currOffset);\r\n    const week: DateInterface[] = [];\r\n\r\n    for (let i = 1; i <= 7; i++) {\r\n        const first = targetDate.getDate() - targetDate.getDay() + i;\r\n        const currDay = new Date(targetDate.setDate(first));\r\n\r\n        const item: DateInterface = {\r\n            date: currDay.getDate(),\r\n            day: currDay.getDay() === 0 ? 7 : currDay.getDay(),\r\n            month: currDay.getMonth(),\r\n            year: currDay.getFullYear()\r\n        };\r\n\r\n        week.push(item);\r\n    }\r\n\r\n    return week;\r\n}\r\n\r\nexport const getFocus = (dayStatistics: StatistticItemInterface): string => {\r\n    if (!dayStatistics.workTime) {\r\n        return '0%';\r\n    }\r\n\r\n    const focus = Math.round((dayStatistics.workTime + dayStatistics.pauseTime) / dayStatistics.workTime);\r\n    return `${focus}%`;\r\n}","import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ActionsEnum } from '../../../enums/actions.enum';\r\nimport { setActonName } from '../../../helpers/common-helpers';\r\nimport { TaskInterface } from '../../../interfaces/task.interface';\r\nimport { RootState } from '../../../store/store';\r\nimport { Button } from '../../ui-kit/Button';\r\nimport styles from './actions.module.scss';\r\n\r\ninterface IActionsProps {\r\n    isBreak: boolean;\r\n    setDefault?: boolean;\r\n    onStart?: () => void;\r\n    onStop?: () => void;\r\n    onPause?: () => void;\r\n    onContinue?: () => void;\r\n    onSkip?: () => void;\r\n    onComplete?: () => void;\r\n}\r\n\r\nconst NOOP = () => { };\r\n\r\nexport function Actions({\r\n    isBreak,\r\n    setDefault = false,\r\n    onStart = NOOP,\r\n    onStop = NOOP,\r\n    onPause = NOOP,\r\n    onContinue = NOOP,\r\n    onSkip = NOOP,\r\n    onComplete = NOOP,\r\n}: IActionsProps) {\r\n\r\n    const tasks = useSelector<RootState, TaskInterface[]>(state => state.tasks);\r\n    const [rightButtonAction, setRightButtonAction] = useState(isBreak ? ActionsEnum.skip : ActionsEnum.stop);\r\n    const [leftButtonAction, setLeftButtonAction] = useState(ActionsEnum.start);\r\n\r\n    useEffect(() => {\r\n        setRightButtonAction(isBreak ? ActionsEnum.skip : ActionsEnum.stop);\r\n        setLeftButtonAction(ActionsEnum.start)\r\n    }, [isBreak]);\r\n\r\n    useEffect(() => {\r\n        if (setDefault) {\r\n            setRightButtonAction(ActionsEnum.stop);\r\n            setLeftButtonAction(ActionsEnum.start)\r\n        }\r\n    }, [setDefault])\r\n\r\n    const onLeftButtonClick = () => {\r\n        if (tasks.length === 0) {\r\n            return;\r\n        }\r\n\r\n        switch (leftButtonAction) {\r\n            case ActionsEnum.start:\r\n                onStart();\r\n                setLeftButtonAction(ActionsEnum.pause);\r\n                break;\r\n            case ActionsEnum.pause:\r\n                onPause();\r\n                setLeftButtonAction(ActionsEnum.continue);\r\n                if (!isBreak) {\r\n                    setRightButtonAction(ActionsEnum.complete);\r\n                }\r\n                break;\r\n            case ActionsEnum.continue:\r\n                onContinue();\r\n                setLeftButtonAction(ActionsEnum.pause);\r\n                setRightButtonAction(isBreak ? ActionsEnum.skip : ActionsEnum.stop);\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    const onRightButtonClick = () => {\r\n        if (tasks.length === 0) {\r\n            return;\r\n        }\r\n\r\n        switch (rightButtonAction) {\r\n            case ActionsEnum.stop:\r\n                onStop();\r\n                setLeftButtonAction(ActionsEnum.start);\r\n                break;\r\n            case ActionsEnum.complete:\r\n                onComplete();\r\n                setLeftButtonAction(ActionsEnum.start);\r\n                setRightButtonAction(ActionsEnum.stop);\r\n                break;\r\n            case ActionsEnum.skip:\r\n                onSkip();\r\n                setLeftButtonAction(ActionsEnum.start);\r\n                setRightButtonAction(ActionsEnum.stop);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.left}>\r\n                <Button onClick={() => onLeftButtonClick()}>\r\n                    {setActonName(leftButtonAction)}\r\n                </Button>\r\n            </div>\r\n            <div className={styles.right}>\r\n                <Button theme='red' onClick={() => onRightButtonClick()}>\r\n                    {setActonName(rightButtonAction)}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ActionCreator } from 'redux';\r\nimport { TimeInterface } from '../../interfaces/time.interface';\r\nimport { StopClickInterface } from '../../interfaces/stop-click.interface';\r\nimport { UpdateCompletedTaskInterface } from '../../interfaces/update-completed-task.intreface';\r\n\r\nexport const UPDATE_STOP_CLICKS = 'UPDATE_STOP_CLICKS';\r\nexport type UpdateStopClicksAction = {\r\n    type: typeof UPDATE_STOP_CLICKS;\r\n    data: StopClickInterface;\r\n}\r\nexport const updateStopClicks: ActionCreator<UpdateStopClicksAction> = (data: StopClickInterface) => ({\r\n    type: UPDATE_STOP_CLICKS,\r\n    data,\r\n});\r\n\r\nexport const UPDATE_COMPLETED_TASKS = 'UPDATE_COMPLETED_TASKS';\r\nexport type UpdateCompletedTasksAction = {\r\n    type: typeof UPDATE_COMPLETED_TASKS;\r\n    data: UpdateCompletedTaskInterface;\r\n}\r\nexport const updateCompletedTasks: ActionCreator<UpdateCompletedTasksAction> = (data: UpdateCompletedTaskInterface) => ({\r\n    type: UPDATE_COMPLETED_TASKS,\r\n    data,\r\n});\r\n\r\nexport const UPDATE_PAUSED_TIME = 'UPDATE_PAUSED_TIME';\r\nexport type UpdatePausedTimeAction = {\r\n    type: typeof UPDATE_PAUSED_TIME;\r\n    data: TimeInterface;\r\n}\r\nexport const updatePausedTime: ActionCreator<UpdatePausedTimeAction> = (data: UpdateCompletedTaskInterface) => ({\r\n    type: UPDATE_PAUSED_TIME,\r\n    data,\r\n});\r\n\r\nexport const UPDATE_WORK_TIME = 'UPDATE_WORK_TIME';\r\nexport type UpdateWorkTimeAction = {\r\n    type: typeof UPDATE_WORK_TIME;\r\n    data: TimeInterface;\r\n}\r\nexport const updateWorkTime: ActionCreator<UpdateWorkTimeAction> = (data: UpdateCompletedTaskInterface) => ({\r\n    type: UPDATE_WORK_TIME,\r\n    data,\r\n})","import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createDateObject } from '../../../helpers/common-helpers';\r\nimport { TimeInterface } from '../../../interfaces/time.interface';\r\nimport { updatePausedTime } from '../../../store/statistics/action';\r\nimport { PlusIcon } from '../../icons';\r\nimport styles from './clock.module.scss';\r\n\r\ninterface IClockInterface {\r\n    time: number;\r\n    isPaused: boolean;\r\n    isStarted: boolean;\r\n    onTimeOver?: () => void;\r\n    onAdd?: () => void;\r\n    onDurationChange?: (duration: number) => void;\r\n}\r\n\r\nexport function Clock({\r\n    time,\r\n    isPaused,\r\n    isStarted,\r\n    onTimeOver = () => { },\r\n    onAdd = () => { },\r\n    onDurationChange = () => { },\r\n}: IClockInterface) {\r\n    const [duration, setDuration] = useState(time * 60);\r\n    const [pauseDuration, setPauseDuration] = useState(0);\r\n    const [paused, setPaused] = useState(false);\r\n    const [started, setStarted] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setDuration(time * 60);\r\n    }, [time, started]);\r\n\r\n    useEffect(() => {\r\n        setStarted(isStarted);\r\n    }, [isStarted]);\r\n\r\n    useEffect(() => {\r\n        setPaused(isPaused);\r\n        if (!isPaused) {\r\n            const item: TimeInterface = {\r\n                amount: pauseDuration / 60,\r\n                date: createDateObject(),\r\n            }\r\n            dispatch(updatePausedTime(item))\r\n        }\r\n    }, [isPaused, pauseDuration, dispatch]);\r\n\r\n    useEffect(() => {\r\n        let intervalTimeoutId: NodeJS.Timeout;\r\n        let pausedIntervalTimeoutId: NodeJS.Timeout;\r\n\r\n        const updateTimer = () => {\r\n            if (duration > 0) {\r\n                setDuration(duration => duration - 0.01);\r\n                onDurationChange(duration);\r\n            } else {\r\n                onTimeOver();\r\n            }\r\n        }\r\n\r\n        const updatePausedTimer = () => {\r\n            setPauseDuration(pauseDuration => pauseDuration + 0.01);\r\n        }\r\n\r\n        if (started && !paused) {\r\n            intervalTimeoutId = setInterval(updateTimer, 10);\r\n        }\r\n\r\n        if (paused) {\r\n            pausedIntervalTimeoutId = setInterval(updatePausedTimer, 10);\r\n        }\r\n\r\n        return () => {\r\n            if (intervalTimeoutId) {\r\n                clearInterval(intervalTimeoutId);\r\n            }\r\n\r\n            if (pausedIntervalTimeoutId) {\r\n                clearInterval(pausedIntervalTimeoutId);\r\n            }\r\n        }\r\n    }, [paused, started, duration, onTimeOver, onDurationChange]);\r\n\r\n    const integerDuration = Math.ceil(duration);\r\n\r\n    const minutes = Math.floor((integerDuration / 60) % 60);\r\n    const seconds = Math.floor(integerDuration % 60);\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <span className={styles.clock}>\r\n                {(minutes >= 10) ? minutes : `0${minutes}`}:\r\n                {(seconds >= 10) ? seconds : `0${seconds}`}\r\n            </span>\r\n            <button className={styles.add} onClick={() => onAdd()}>\r\n                <PlusIcon />\r\n            </button>\r\n        </div>\r\n    )\r\n}","const defaultTime: number = 25;\r\nconst sessionTime: number = 25;\r\nconst breakTime: number = 5;\r\nconst longBreakTime: number = 15;\r\n\r\nexport {\r\n    defaultTime,\r\n    sessionTime,\r\n    breakTime,\r\n    longBreakTime,\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TaskInterface } from '../../interfaces/task.interface';\r\nimport { RootState } from '../../store/store';\r\nimport { Actions } from './Actions';\r\nimport { Clock } from './Clock';\r\nimport styles from './timer.module.scss';\r\nimport classNames from 'classnames';\r\nimport { useEffect } from 'react';\r\nimport { updateTasks } from '../../store/tasks/action';\r\nimport { updateCompletedTasks, updateStopClicks, updateWorkTime } from '../../store/statistics/action';\r\nimport { createDateObject } from '../../helpers/common-helpers';\r\nimport { StopClickInterface } from '../../interfaces/stop-click.interface';\r\nimport { UpdateCompletedTaskInterface } from '../../interfaces/update-completed-task.intreface';\r\nimport { TimeInterface } from '../../interfaces/time.interface';\r\nimport { breakTime, defaultTime, longBreakTime, sessionTime } from '../../constants';\r\n\r\n\r\nexport function Timer() {\r\n    const tasksToBeDone = useSelector<RootState, TaskInterface[]>(state => state.tasks);\r\n    const [isStart, setIsStart] = useState(false);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const [isBreak, setIsBreak] = useState(false);\r\n    const [defaultState, setDefaultState] = useState(false);\r\n    const [currentTaskId, setCurrentTaskId] = useState<string>(tasksToBeDone.length ? tasksToBeDone[0].id : '');\r\n    const [currentTask, setCurrentTask] = useState<TaskInterface | undefined>(tasksToBeDone.find((item) => item.id === currentTaskId));\r\n    const [time, setTime] = useState(sessionTime);\r\n    const [numberOfBreaks, setNumberOfBreaks] = useState(0);\r\n    const [duration, setDuration] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentTaskId(tasksToBeDone.length ? tasksToBeDone[0].id : '');\r\n        setCurrentTask(tasksToBeDone.find((item) => item.id === currentTaskId));\r\n        if (tasksToBeDone.length === 0) {\r\n            setIsBreak(false);\r\n            setIsStart(false);\r\n            setDefaultState(true);\r\n            setTime(sessionTime);\r\n        }\r\n    }, [tasksToBeDone, currentTaskId])\r\n\r\n\r\n    const headerClasses = classNames(\r\n        styles.header,\r\n        { [styles.start]: (isStart || isPaused) && !isBreak },\r\n        { [styles.break]: (isStart || isPaused) && isBreak },\r\n    )\r\n\r\n    const updateTasksList = (): void => {\r\n        let newList: TaskInterface[] = [];\r\n        if (currentTask!.count > 1) {\r\n            newList = tasksToBeDone.map((task: TaskInterface) => {\r\n                if (task.id === currentTaskId) {\r\n                    const newTask = {\r\n                        id: task.id,\r\n                        count: task.count - 1,\r\n                        title: task.title,\r\n                        completed: task.completed,\r\n                    }\r\n                    return newTask;\r\n                }\r\n                return task;\r\n            });\r\n        } else {\r\n            newList = tasksToBeDone.filter((item) => item.id !== currentTaskId);\r\n        }\r\n\r\n        const item: UpdateCompletedTaskInterface = {\r\n            amount: 1,\r\n            date: createDateObject(),\r\n        }\r\n        dispatch(updateCompletedTasks(item));\r\n\r\n        dispatch(updateTasks(newList))\r\n    }\r\n\r\n    const onStart = (): void => {\r\n        setIsStart(true);\r\n        setDefaultState(false);\r\n    }\r\n\r\n    const onPause = (): void => {\r\n        setIsPaused(true);\r\n    }\r\n\r\n    const onContinue = (): void => {\r\n        setIsPaused(false);\r\n    }\r\n\r\n    const onStop = (): void => {\r\n        const item: StopClickInterface = {\r\n            amount: 1,\r\n            date: createDateObject(),\r\n        }\r\n        dispatch(updateStopClicks(item));\r\n        setIsStart(false);\r\n        setTime(defaultTime);\r\n        setDefaultState(false);\r\n    }\r\n\r\n    const onComplete = (): void => {\r\n        setIsStart(false);\r\n        setIsPaused(false);\r\n        updateTasksList();\r\n        setIsBreak(true);\r\n        const item: TimeInterface = {\r\n            amount: duration,\r\n            date: createDateObject(),\r\n        }\r\n        dispatch(updateWorkTime(item));\r\n        setTime(numberOfBreaks < 4 ? breakTime : longBreakTime);\r\n        const count = numberOfBreaks + 1;\r\n        setNumberOfBreaks(count > 4 ? 0 : count)\r\n\r\n    }\r\n\r\n    const onSkip = (): void => {\r\n        setIsStart(false);\r\n        setIsBreak(false);\r\n        setTime(sessionTime);\r\n    }\r\n\r\n    const onTimeOver = (): void => {\r\n        setIsStart(false);\r\n        setIsPaused(false);\r\n        if (!isBreak) {\r\n            const item: TimeInterface = {\r\n                amount: sessionTime,\r\n                date: createDateObject(),\r\n            }\r\n            dispatch(updateWorkTime(item));\r\n            updateTasksList();\r\n            setIsBreak(true);\r\n            setTime(numberOfBreaks < 4 ? breakTime : longBreakTime);\r\n            const count = numberOfBreaks + 1;\r\n            setNumberOfBreaks(count > 4 ? 0 : count)\r\n        } else {\r\n            setIsBreak(false);\r\n            setTime(sessionTime);\r\n        }\r\n    }\r\n\r\n    const onAddTime = (): void => {\r\n        setTime(time + 1);\r\n    }\r\n\r\n    const onDurationChange = (value: number) => {\r\n        setDuration(sessionTime - (value / 60));\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={headerClasses}>\r\n                {tasksToBeDone.length > 0 && (\r\n                    <>\r\n                        <p className={styles.task}>{currentTask?.title}</p>\r\n                        <p className={styles.tomatoCouter}>Помидор {currentTask?.count}</p>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className={styles.content}>\r\n                <Clock\r\n                    time={time}\r\n                    isStarted={isStart}\r\n                    isPaused={isPaused}\r\n                    onTimeOver={onTimeOver}\r\n                    onAdd={onAddTime}\r\n                    onDurationChange={onDurationChange}\r\n                />\r\n                {tasksToBeDone.length > 0 && (\r\n                    <div className={styles.taskLine}>\r\n                        <span className={styles.taskNumber}>Задача 1 - </span>\r\n                        <span className={styles.taskName}>{currentTask?.title}</span>\r\n                    </div>\r\n                )}\r\n                <div className={styles.actions}>\r\n                    <Actions\r\n                        setDefault={defaultState}\r\n                        isBreak={isBreak}\r\n                        onStart={onStart}\r\n                        onPause={onPause}\r\n                        onContinue={onContinue}\r\n                        onStop={onStop}\r\n                        onComplete={onComplete}\r\n                        onSkip={onSkip}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Legend } from '../../components/Legend';\r\nimport { TasksContainer } from '../../components/TasksContainer';\r\nimport { Timer } from '../../components/Timer';\r\nimport styles from './main.module.scss';\r\n\r\nexport function Main() {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.left}>\r\n                <div className={styles.legend}>\r\n                    <Legend />\r\n                </div>\r\n                <TasksContainer />\r\n            </div>\r\n            <div className={styles.right}>\r\n                <Timer />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './chart.module.scss';\r\n\r\ninterface IChartProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport function Chart({ children }: IChartProps) {\r\n\r\n    return (\r\n        <div className={styles.chart}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import classNames from 'classnames';\r\nimport styles from './bar.module.scss';\r\n\r\ninterface IBarProps {\r\n    width: number;\r\n    height: number;\r\n    isActive?: boolean;\r\n}\r\n\r\nexport function Bar({ width, height, isActive = false }: IBarProps) {\r\n    const barStyle = {\r\n        width: `${width}px`,\r\n        height: height > 0 ? `${height}px` : '5px'\r\n    }\r\n\r\n    const barClasses = classNames(\r\n        { [styles.bar]: height !== 0 },\r\n        { [styles.empty]: height === 0 },\r\n        { [styles.active]: isActive && height !== 0 }\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={barClasses} style={barStyle}>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import classNames from 'classnames';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { SelectItemInterface } from '../../../interfaces/select-item.interface';\r\nimport { ArrowDownIcon } from '../../icons';\r\nimport styles from './select.module.scss';\r\n\r\ninterface ISelectProps {\r\n    placeholder?: string;\r\n    selectedItem?: SelectItemInterface;\r\n    options?: SelectItemInterface[];\r\n    onSelect?: (item: SelectItemInterface) => void;\r\n}\r\n\r\nexport function Select({ placeholder, selectedItem, options, onSelect = () => { } }: ISelectProps) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        const handelClick = (event: MouseEvent) => {\r\n            if (event.target instanceof Node && ref && !ref.current?.contains(event.target)) {\r\n                setIsOpen(false);\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', handelClick);\r\n\r\n        return () => {\r\n            document.removeEventListener('click', handelClick);\r\n        }\r\n    }, [ref]);\r\n\r\n    const selectClasses = classNames(\r\n        styles.select,\r\n        { [styles.selectActive]: isOpen },\r\n    )\r\n\r\n    const iconClasses = classNames(\r\n        styles.icon,\r\n        { [styles.iconActive]: isOpen }\r\n    )\r\n\r\n    const onItemClick = (item: SelectItemInterface): void => {\r\n        onSelect(item);\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={selectClasses} ref={ref}>\r\n            <div className={styles.input} onClick={() => setIsOpen(!isOpen)}>\r\n                {!selectedItem && <p className={styles.placeholderText}>{placeholder}</p>}\r\n                {selectedItem && <p className={styles.selectedItemText}>{selectedItem.title}</p>}\r\n                <div className={iconClasses}>\r\n                    <ArrowDownIcon />\r\n                </div>\r\n            </div>\r\n            {options && isOpen && (\r\n                <ul className={styles.dropdown}>\r\n                    {options.filter((item) => item.value !== selectedItem?.value).map((item: SelectItemInterface, index: number) => (\r\n                        <li key={index} className={styles.dropdownItem} onClick={() => onItemClick(item)}>\r\n                            {item.title}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    )\r\n}","import { NumeralForms } from '../interfaces/numeral-forms.interface';\r\n\r\nconst minutesUnits: NumeralForms = {single: 'минуты', multi: 'минут', plural: 'минут'};\r\nconst hoursUnits: NumeralForms = {single: 'часа', multi: 'часов', plural: 'часов'};\r\n\r\nconst convertNumerals = (count: number, units: NumeralForms): string => {\r\n    let unit = '';\r\n\r\n    if (count >= 11 && count <= 14) {\r\n        unit = units.plural;\r\n    } else {\r\n        const lastNumber = count % 10;\r\n\r\n        if (lastNumber === 0 || (lastNumber >= 5 && lastNumber <= 9)) {\r\n            unit = units.plural;\r\n        } else if (lastNumber === 1) {\r\n            unit = units.single;\r\n        } else if (lastNumber >= 2 && lastNumber <= 4) {\r\n            unit = units.multi;\r\n        }\r\n    }\r\n\r\n    return unit;\r\n}\r\n\r\nconst getTimeObjectFromMinutes = (totalMinutes: number): {hours: number, minutes: number} => {\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = Math.round(totalMinutes % 60);\r\n\r\n    return {hours, minutes};\r\n}\r\n\r\nexport const convertMinutesToHHMMFormat = (totalMinutes: number): string => {\r\n    const { hours, minutes } = getTimeObjectFromMinutes(totalMinutes);\r\n    return `${hours > 0 ? `${hours}ч ` : ''}${minutes}м`;\r\n}\r\n\r\nexport const getFullTimeFromMinutes = (totalMinutes: number): string => {\r\n    const { hours, minutes } = getTimeObjectFromMinutes(totalMinutes);\r\n    return `${hours > 0 ? `${hours} ${convertNumerals(hours, hoursUnits)} ` : ''}${minutes} ${convertNumerals(minutes, minutesUnits)}`;\r\n}","import classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Chart } from '../../components/Chart';\r\nimport { Bar } from '../../components/Chart/Bar';\r\nimport { CancelBigIcon, ClockBigIcon, FocusBigIcon } from '../../components/icons';\r\nimport { Select } from '../../components/ui-kit/Select';\r\nimport { getDayName, getFocus, getWeek } from '../../helpers/common-helpers';\r\nimport { convertMinutesToHHMMFormat, getFullTimeFromMinutes } from '../../helpers/convert-numerals-helpers';\r\nimport { SelectItemInterface } from '../../interfaces/select-item.interface';\r\nimport { StatistticItemInterface } from '../../interfaces/statistic-item.interface';\r\nimport { RootState } from '../../store/store';\r\nimport styles from './statistics.module.scss';\r\n\r\nconst options: SelectItemInterface[] = [\r\n    {\r\n        value: 0,\r\n        title: 'Эта неделя',\r\n    },\r\n    {\r\n        value: 1,\r\n        title: 'Прошедшая неделя',\r\n    },\r\n    {\r\n        value: 2,\r\n        title: '2 недели назад',\r\n    }\r\n]\r\n\r\nconst daysList: SelectItemInterface[] = [\r\n    {\r\n        value: 1,\r\n        title: 'Пн',\r\n    },\r\n    {\r\n        value: 2,\r\n        title: 'Вт',\r\n    },\r\n    {\r\n        value: 3,\r\n        title: 'Ср',\r\n    },\r\n    {\r\n        value: 4,\r\n        title: 'Чт',\r\n    },\r\n    {\r\n        value: 5,\r\n        title: 'Пт',\r\n    },\r\n    {\r\n        value: 6,\r\n        title: 'Сб',\r\n    },\r\n    {\r\n        value: 7,\r\n        title: 'Вс',\r\n    },\r\n];\r\n\r\nconst timeData: SelectItemInterface[] = [\r\n    {\r\n        value: 1,\r\n        title: 0,\r\n    },\r\n    {\r\n        value: 2,\r\n        title: 0,\r\n    },\r\n    {\r\n        value: 3,\r\n        title: 0,\r\n    },\r\n    {\r\n        value: 4,\r\n        title: 0,\r\n    },\r\n    {\r\n        value: 5,\r\n        title: 0,\r\n    },\r\n    {\r\n        value: 6,\r\n        title: 0,\r\n    },\r\n    {\r\n        value: 7,\r\n        title: 0,\r\n    },\r\n]\r\n\r\nconst defaultDayStatistics: StatistticItemInterface = {\r\n    date: {\r\n        date: 0,\r\n        day: 0,\r\n        month: 0,\r\n        year: 0,\r\n    },\r\n    stopClicks: 0,\r\n    completedTasks: 0,\r\n    workTime: 0,\r\n    pauseTime: 0,\r\n}\r\n\r\nexport function Statistics() {\r\n    const statistics = useSelector<RootState, StatistticItemInterface[]>(state => state.statistics)\r\n    const [selectedItemOption, setSelectedOption] = useState(options[0]);\r\n    const [currentDayId, setCurrentDayId] = useState(1);\r\n    const [selectedDay, setSelectedDay] = useState(getDayName(1));\r\n    const [weekStatistics, setWeekStatistics] = useState<StatistticItemInterface[]>([])\r\n    const [activityData, setActivityData] = useState<SelectItemInterface[]>(timeData);\r\n    const [dayStatistics, setDayStatistics] = useState<StatistticItemInterface>(defaultDayStatistics)\r\n\r\n    useEffect(() => {\r\n        const week = getWeek(selectedItemOption.value);\r\n        const weekData = statistics.filter(item => week.some(t => {\r\n            return t.date === item.date.date &&\r\n                t.day === item.date.day &&\r\n                t.month === item.date.month &&\r\n                t.year === item.date.year\r\n        }));\r\n        setWeekStatistics(weekData);\r\n    }, [selectedItemOption, statistics]);\r\n\r\n    useEffect(() => {\r\n        const barData = timeData.map((el: SelectItemInterface) => {\r\n            const val = weekStatistics.find((item: StatistticItemInterface) => item.date.day === el.value);\r\n            if (val) {\r\n                el.title = val.workTime + val.pauseTime;\r\n            } else {\r\n                el.title = 0;\r\n            }\r\n            return el;\r\n        })\r\n        setActivityData(barData);\r\n    }, [weekStatistics]);\r\n\r\n    useEffect(() => {\r\n        const dayData = weekStatistics.find((item: StatistticItemInterface) => item.date.day === currentDayId);\r\n        if (dayData) {\r\n            setDayStatistics(dayData);\r\n        } else {\r\n            setDayStatistics(defaultDayStatistics);\r\n        }\r\n    }, [weekStatistics, currentDayId]);\r\n\r\n    const onOptionSelect = (item: SelectItemInterface): void => {\r\n        setSelectedOption(item);\r\n    }\r\n\r\n    const onLegendItemClick = (value: number): void => {\r\n        setCurrentDayId(value);\r\n        setSelectedDay(getDayName(value));\r\n    }\r\n\r\n    const focusClasses = classNames(\r\n        styles.dataContainer,\r\n        { [styles.focus]: dayStatistics.workTime + dayStatistics.pauseTime > 0 },\r\n    )\r\n\r\n    const pauseClasses = classNames(\r\n        styles.dataContainer,\r\n        { [styles.pause]: dayStatistics.workTime + dayStatistics.pauseTime > 0 },\r\n    )\r\n\r\n    const stopsClasses = classNames(\r\n        styles.dataContainer,\r\n        { [styles.stops]: dayStatistics.workTime + dayStatistics.pauseTime > 0 },\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <h2 className={styles.title}>Ваша активность</h2>\r\n                <div className={styles.select}>\r\n                    <Select options={options} selectedItem={selectedItemOption} onSelect={(item) => onOptionSelect(item)} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.content}>\r\n                <div className={styles.dayActivity}>\r\n                    <p className={styles.dayTitle}>{selectedDay}</p>\r\n                    {dayStatistics.workTime + dayStatistics.pauseTime === 0 && (\r\n                        <p className={styles.dayText}>\r\n                            Нет данных\r\n                        </p>\r\n                    )}\r\n                    {dayStatistics.workTime + dayStatistics.pauseTime > 0 && (\r\n                        <p className={styles.dayText}>\r\n                            Вы работали над задачами в течение <span>{getFullTimeFromMinutes(dayStatistics.workTime + dayStatistics.pauseTime)}</span>\r\n                        </p>\r\n                    )}\r\n                </div>\r\n                <div className={styles.pomodoroContainer}>\r\n                    {dayStatistics.workTime + dayStatistics.pauseTime === 0 && (\r\n                        <div className={styles.emptyPomodoro}>\r\n                            <img src={process.env.PUBLIC_URL + '/assets/images/tomato-big.png'} alt=\"tomato-big\" />\r\n                        </div>\r\n                    )}\r\n                    {dayStatistics.workTime + dayStatistics.pauseTime > 0 && (\r\n                        <>\r\n                            <div className={styles.pomodoroCounter}>\r\n                                <img src={process.env.PUBLIC_URL + '/assets/images/tomato-small.png'} alt=\"tomato-small\" />\r\n                                <p>x {dayStatistics.completedTasks}</p>\r\n                            </div>\r\n                            <div className={styles.pomodoroTitle}>\r\n                                <p>{dayStatistics.completedTasks} помидора</p>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className={styles.chart}>\r\n                    <div className={styles.barChart}>\r\n                        <Chart>\r\n                            {activityData.map((item) => (\r\n                                <div\r\n                                    key={item.value}\r\n                                    className={styles.bar}\r\n                                    onClick={() => onLegendItemClick(item.value)}\r\n                                >\r\n                                    <Bar width={77} height={item.title as number} isActive={currentDayId === item.value} />\r\n                                </div>\r\n                            ))}\r\n                        </Chart>\r\n                    </div>\r\n                    <ul className={styles.legend}>\r\n                        {daysList.map((item) => (\r\n                            <li\r\n                                className={`${styles.legendItem} ${currentDayId === item.value ? styles.activeItem : ''}`}\r\n                                key={item.value}\r\n                                onClick={() => onLegendItemClick(item.value)}\r\n                            >\r\n                                {item.title}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div className={styles.background}>\r\n                        <div className={styles.line}>\r\n                            <div className={styles.dash}></div>\r\n                            <p className={styles.lineTime}>25 мин</p>\r\n                        </div>\r\n                        <div className={styles.line}>\r\n                            <div className={styles.dash}></div>\r\n                            <p className={styles.lineTime}>50 мин</p>\r\n                        </div>\r\n                        <div className={styles.line}>\r\n                            <div className={styles.dash}></div>\r\n                            <p className={styles.lineTime}>1 ч 15 мин</p>\r\n                        </div>\r\n                        <div className={styles.line}>\r\n                            <div className={styles.dash}></div>\r\n                            <p className={styles.lineTime}>1 ч 40 мин</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.dataRow}>\r\n                <div className={focusClasses}>\r\n                    <div className={styles.dataColumn}>\r\n                        <p className={styles.dataTitle}>Фокус</p>\r\n                        <p className={styles.dataValue}>\r\n                            {getFocus(dayStatistics)}\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.dataIcon}>\r\n                        <FocusBigIcon />\r\n                    </div>\r\n                </div>\r\n                <div className={pauseClasses}>\r\n                    <div className={styles.dataColumn}>\r\n                        <p className={styles.dataTitle}>Время на паузе</p>\r\n                        <p className={styles.dataValue}>{convertMinutesToHHMMFormat(dayStatistics.pauseTime)}</p>\r\n                    </div>\r\n                    <div className={styles.dataIcon}>\r\n                        <ClockBigIcon />\r\n                    </div>\r\n                </div>\r\n                <div className={stopsClasses}>\r\n                    <div className={styles.dataColumn}>\r\n                        <p className={styles.dataTitle}>Остановки</p>\r\n                        <p className={styles.dataValue}>{dayStatistics.stopClicks}</p>\r\n                    </div>\r\n                    <div className={styles.dataIcon}>\r\n                        <CancelBigIcon />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { createStore, Reducer } from 'redux';\r\nimport { getDateStringFromDateOject } from '../helpers/common-helpers';\r\nimport { StatistticItemInterface } from '../interfaces/statistic-item.interface';\r\nimport { TaskInterface } from '../interfaces/task.interface';\r\nimport { UpdateCompletedTasksAction, UpdatePausedTimeAction, UpdateStopClicksAction, UpdateWorkTimeAction, UPDATE_COMPLETED_TASKS, UPDATE_PAUSED_TIME, UPDATE_STOP_CLICKS, UPDATE_WORK_TIME } from './statistics/action';\r\nimport { AddTaskAction, ADD_TASK, UpdateTasksAction, UPDATE_TASKS } from './tasks/action';\r\n\r\nexport type RootState = {\r\n    tasks: TaskInterface[],\r\n    statistics: StatistticItemInterface[],\r\n}\r\n\r\nconst initialState: RootState = {\r\n    tasks: [],\r\n    statistics: [],\r\n}\r\n\r\ntype MyAction = UpdateTasksAction | \r\n                AddTaskAction | \r\n                UpdateStopClicksAction | \r\n                UpdateCompletedTasksAction | \r\n                UpdatePausedTimeAction |\r\n                UpdateWorkTimeAction;\r\n\r\nconst updateStopClicks = (state: RootState, action: UpdateStopClicksAction): StatistticItemInterface[] => {\r\n    const item = state.statistics.find((el) => getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date));\r\n    if (item) {\r\n        return state.statistics.map((el) => {\r\n            if (getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date)){\r\n                el.stopClicks += action.data.amount;\r\n            };\r\n            return el;\r\n        })\r\n    } else {\r\n        const newItem: StatistticItemInterface = {\r\n            date: action.data.date,\r\n            stopClicks: action.data.amount,\r\n            completedTasks: 0,\r\n            workTime: 0,\r\n            pauseTime: 0,\r\n        }\r\n        return [...state.statistics, newItem];\r\n    }\r\n}\r\n\r\nconst updateCompletedTasks = (state: RootState, action: UpdateCompletedTasksAction): StatistticItemInterface[] => {\r\n    const item = state.statistics.find((el) => getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date));\r\n    if (item) {\r\n        return state.statistics.map((el) => {\r\n            if (getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date)){\r\n                el.completedTasks += action.data.amount;\r\n            };\r\n            return el;\r\n        })\r\n    } else {\r\n        const newItem: StatistticItemInterface = {\r\n            date: action.data.date,\r\n            stopClicks: 0,\r\n            completedTasks: action.data.amount,\r\n            workTime: 0,\r\n            pauseTime: 0,\r\n        }\r\n        return [...state.statistics, newItem];\r\n    }\r\n}\r\n\r\nconst updatePausedTime = (state: RootState, action: UpdatePausedTimeAction): StatistticItemInterface[] => {\r\n    const item = state.statistics.find((el) => getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date));\r\n    if (item) {\r\n        return state.statistics.map((el) => {\r\n            if (getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date)){\r\n                el.pauseTime += action.data.amount;\r\n            };\r\n            return el;\r\n        })\r\n    } else {\r\n        const newItem: StatistticItemInterface = {\r\n            date: action.data.date,\r\n            stopClicks: 0,\r\n            completedTasks: 0,\r\n            workTime: 0,\r\n            pauseTime: action.data.amount,\r\n        }\r\n        return [...state.statistics, newItem];\r\n    }\r\n}\r\n\r\nconst updateWorkTime = (state: RootState, action: UpdateWorkTimeAction): StatistticItemInterface[] => {\r\n    const item = state.statistics.find((el) => getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date));\r\n    if (item) {\r\n        return state.statistics.map((el) => {\r\n            if (getDateStringFromDateOject(el.date) === getDateStringFromDateOject(action.data.date)){\r\n                el.workTime += action.data.amount;\r\n            };\r\n            return el;\r\n        })\r\n    } else {\r\n        const newItem: StatistticItemInterface = {\r\n            date: action.data.date,\r\n            stopClicks: 0,\r\n            completedTasks: 0,\r\n            workTime: action.data.amount,\r\n            pauseTime: 0,\r\n        }\r\n        return [...state.statistics, newItem];\r\n    }\r\n}\r\n\r\nexport const rootReducer: Reducer<RootState, MyAction> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_TASKS:\r\n            return {\r\n                ...state,\r\n                tasks: action.data,\r\n            }\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, action.task],\r\n            }\r\n        case UPDATE_STOP_CLICKS:\r\n            return {\r\n                ...state,\r\n                statistics: updateStopClicks(state, action),\r\n            }\r\n        case UPDATE_COMPLETED_TASKS:\r\n            return {\r\n                ...state,\r\n                statistics: updateCompletedTasks(state, action),\r\n            }\r\n        case UPDATE_PAUSED_TIME:\r\n            return {\r\n                ...state,\r\n                statistics: updatePausedTime(state, action)\r\n            }\r\n        case UPDATE_WORK_TIME:\r\n            return {\r\n                ...state,\r\n                statistics: updateWorkTime(state, action)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst saveToLocalStorage = (state: RootState): void => {\r\n    try {\r\n        const seriallisedState = JSON.stringify(state);\r\n        localStorage.setItem('persistantState', seriallisedState);\r\n    } catch (error) {\r\n        console.warn(error)\r\n    }\r\n}\r\n\r\nconst loadFromLocalStorage = (): RootState | undefined => {\r\n    try {\r\n        const seriallisedState = localStorage.getItem('persistantState');\r\n        if (seriallisedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(seriallisedState);\r\n    } catch (error) {\r\n        console.warn(error)\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const store = createStore(rootReducer, loadFromLocalStorage());\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Redirect, Route } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { Main } from './pages/Main';\nimport { Statistics } from './pages/Statistics';\nimport { store } from './store/store';\n\nfunction App() {\n  return (\n    <div className={'container'}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <Header />\n          <Route exact path='/' component={Main} />\n          <Route path='/statistics' component={Statistics} />\n          <Redirect from=\"*\" to=\"/\" />\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}